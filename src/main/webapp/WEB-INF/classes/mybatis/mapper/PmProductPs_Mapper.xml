<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.PmProductPs">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="PmProductPs">
			<id property="id" column="ps_id" />
			<result property="productId" column="product_id" />
			<result property="userId" column="user_id" />
			<result property="psUserId" column="ps_user_id" />
			<result property="floorNum" column="floor_num" />
			<result property="content" column="content" />
			<result property="imageUrl" column="image_url" />
			<result property="level" column="level" />
			<result property="parentPsId" column="parent_ps_id" />
			<result property="isRead" column="is_read" />
			<result property="createdWhen" column="created_when" />
	</resultMap>

	<sql id="sql_selectAll">
		select * from pm_product_ps
	</sql>

	<sql id="sql_where">
		<where>
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where ps_id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="findByPage" parameterType="PmProductPs" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(*) FROM pm_product_ps 
		<include refid="sql_where"/>
    </select>
    
	<insert id="insert" parameterType="PmProductPs" useGeneratedKeys="true" keyProperty="id">
	insert into pm_product_ps(product_id,user_id,ps_user_id,floor_num,content,image_url,level,parent_ps_id,is_read,created_when)
	values(#{productId},#{userId},#{psUserId},#{floorNum},#{content},#{imageUrl},#{level},#{parentPsId},#{isRead},now())
	</insert>
	
	<update id="update" parameterType="PmProductPs">
	  UPDATE pm_product_ps
        <set>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(productId)"> product_id = #{productId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)"> user_id = #{userId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(psUserId)"> ps_user_id = #{psUserId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(floorNum)"> floor_num = #{floorNum},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(content)"> content = #{content},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(imageUrl)"> image_url = #{imageUrl},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(level)"> level = #{level},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(parentPsId)"> parent_ps_id = #{parentPsId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(isRead)"> is_read = #{isRead},</if>
		 </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                ps_id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from pm_product_ps where ps_id = #{id}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM pm_product_ps
		<where>
				ps_id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
</mapper>
