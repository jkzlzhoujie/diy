<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.PmProductPraises">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="PmProductPraises">
			<id property="id" column="praise_id" />
			<result property="productId" column="product_id" />
			<result property="type" column="type" />
			<result property="praiseUserId" column="praise_user_id" />
			<result property="clientId" column="client_id" />
			<result property="remark" column="remark" />
			<result property="createdWhen" column="created_when" />
	</resultMap>

	<sql id="sql_selectAll">
		select * from pm_product_praises
	</sql>

	<sql id="sql_where">
		<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(productId)">and product_id = #{productId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)">and praise_user_id = #{userId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(clientId)">and client_id = #{clientId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)">and type = #{type}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(disUserId)">and praise_user_id != #{disUserId}</if>
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where praise_id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="findIdList" parameterType="map" resultType="long" useCache="false">
	SELECT praise_user_id FROM `pm_product_praises` WHERE `product_id` =#{productId} AND type=#{type} AND praise_user_id IS NOT NULL 
	order by created_when desc
	<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(limit)">limit #{limit}</if>
	</select>
	
	<select id="findByPage" parameterType="PmProductPraises" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(1) FROM pm_product_praises 
		<include refid="sql_where"/>
    </select>
    
	<insert id="insert" parameterType="PmProductPraises" useGeneratedKeys="true" keyProperty="id">
	insert into pm_product_praises(product_id,type,praise_user_id,client_id,remark,created_when)
	values(#{productId},#{type},#{praiseUserId},#{clientId},#{remark},now())
	</insert>
	
	<update id="update" parameterType="PmProductPraises">
	  UPDATE pm_product_praises
        <set>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(productId)"> product_id = #{productId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)"> type = #{type},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(praiseUserId)"> praise_user_id = #{praiseUserId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(clientId)"> client_id = #{clientId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(remark)"> remark = #{remark},</if>
		 </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                praise_id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from pm_product_praises where praise_id = #{id}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM pm_product_praises
		<where>
				praise_id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
	<insert id="insertList" useGeneratedKeys="true" parameterType="list">  
     	insert into pm_product_praises(product_id,type,praise_user_id,client_id,remark,created_when)
	values
       <foreach collection="list" item="item" index="index" separator="," >  
           (#{item.productId},#{item.type},#{item.praiseUserId},#{item.clientId},#{item.remark},now())
       </foreach>  
    </insert>  
</mapper>
