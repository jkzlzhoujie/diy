<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.Statistics">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="Statistics">
			<id property="id" column="statistics_id" />
			<result property="userId" column="client_user_id" />
			<result property="clientId" column="client_id" />
			<result property="type" column="statistics_type" />
			<result property="channelId" column="channel_id" />
			<result property="downloadIp" column="download_ip" />
			<result property="clientVersion" column="client_version" />
			<result property="createdWhen" column="created_when" />
	</resultMap>

	<sql id="sql_selectAll">
		select statistics_id,client_user_id,client_id,statistics_type,channel_id,download_ip,client_version,
		created_when from emoji_client
	</sql>

	<sql id="sql_where">
		<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNumber(id)">and statistics_id = #{id}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)">and client_user_id = #{userId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(clientId)">and client_id = #{clientId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)">and statistics_type = #{type}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(channelId)">and channel_id = #{channelId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(downloadIp)">and download_ip = #{downloadIp}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(clientVersion)">and client_version = #{clientVersion}</if>
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where statistics_id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	</select>
	
	<select id="findByPage" parameterType="Statistics" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(*) FROM emoji_client 
		<include refid="sql_where"/>
    </select>
	
	<insert id="insert" parameterType="Statistics" useGeneratedKeys="true" keyProperty="id">
	insert into emoji_client(client_user_id,client_id,statistics_type,channel_id,download_ip,client_version,created_when) 
	values(#{userId},#{clientId},#{type},#{channelId},#{downloadIp},#{clientVersion},now())
	</insert>
	
	<update id="update" parameterType="Statistics">
	  UPDATE emoji_client
        <set>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)"> client_user_id = #{userId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(clientId)"> client_id = #{clientId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)"> statistics_type = #{type},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(channelId)"> channel_id = #{channelId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(downloadIp)"> download_ip = #{downloadIp},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(clientVersion)"> client_version = #{clientVersion},</if>
		 </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                statistics_id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from emoji_client where statistics_id = #{id}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM emoji_client
		<where>
				id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
</mapper>
