<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.AccountUserBuy">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="AccountUserBuy">
			<id property="id" column="id" />
			<result property="retionId" column="retionId" />
			<result property="commodityId" column="commodityId" />
			<result property="commodityInfoId" column="commodityInfoId" />
			<result property="price" column="price" />
			<result property="status" column="status" />
			<result property="userId" column="userId" />
			<result property="type" column="type" />
			<result property="payType" column="payType" />
			<result property="addTime" column="addTime" />
			<result property="updateTime" column="updateTime" />
			<result property="orderNo" column="orderNo" />
			<result property="remark" column="remark" />
	</resultMap>

	<sql id="sql_selectAll">
		select * from account_user_buy
	</sql>

	<sql id="sql_where">
		<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">and id = #{id}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(orderNo)">and orderNo = #{orderNo}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(joinId)">and retionId = #{joinId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)">and type = #{type}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)">and userId = #{userId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(status)">and status = #{status}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(price)">and price = #{price}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(payType)">and payType = #{payType}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(statusTo)">and status != 4</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(remindTime)">
		 	and status IN(0,2) AND  timestampdiff(MINUTE,addTime,NOW())> #{remindTime}
		 </if>
         <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(endDate)">
             <![CDATA[
                 AND DATE_FORMAT(addTime,'%Y-%m-%d')<=Date_FORMAT(#{endDate},'%Y-%m-%d')
            ]]>
          </if>
          <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(startDate)">
            <![CDATA[
                 AND DATE_FORMAT(addTime,'%Y-%m-%d')>=Date_FORMAT(#{startDate},'%Y-%m-%d')
            ]]>
         </if>
         <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(commodityInfoId)">and commodityInfoId = #{commodityInfoId}</if>
         <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(endDateStr)">
             <![CDATA[
                 AND DATE_FORMAT(addTime,'%Y-%m-%d %H:%i:%s')<=Date_FORMAT(#{endDateStr},'%Y-%m-%d %H:%i:%s')
            ]]>
         </if>
         <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(startDateStr)">
            <![CDATA[
                 AND DATE_FORMAT(addTime,'%Y-%m-%d %H:%i:%s')>=Date_FORMAT(#{startDateStr},'%Y-%m-%d %H:%i:%s')
            ]]>
         </if>
         
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY addTime desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY addTime desc
	</select>
	
	<select id="findByPage" parameterType="AccountUserBuy" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY addTime desc limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(*) FROM account_user_buy 
		<include refid="sql_where"/>
    </select>
    
     <select id="sumPrice" resultType="double" useCache="false">
		SELECT IFNULL(sum(price),0) FROM account_user_buy 
		<include refid="sql_where"/>
    </select>
    
	<insert id="insert" parameterType="AccountUserBuy" useGeneratedKeys="true" keyProperty="id">
	insert into account_user_buy(retionId,commodityId,commodityInfoId,price,status,userId,type,payType,updateTime,orderNo,remark,addTime)
	values(#{retionId},#{commodityId},#{commodityInfoId},#{price},#{status},#{userId},#{type},#{payType},#{updateTime},#{orderNo},#{remark},now())
	</insert>
	
	<update id="update" parameterType="AccountUserBuy">
	  UPDATE account_user_buy
        <set>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(retionId)"> retionId = #{retionId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(commodityId)"> commodityId = #{commodityId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(commodityInfoId)"> commodityInfoId = #{commodityInfoId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(price)"> price = #{price},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(status)"> status = #{status},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)"> userId = #{userId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)"> type = #{type},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(payType)"> payType = #{payType},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(updateTime)"> updateTime = #{updateTime},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(orderNo)"> orderNo = #{orderNo},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(remark)"> remark = #{remark},</if>
		 </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from account_user_buy where id = #{id}
	</delete>
	
	<delete id="deleteByAccountBuyId" parameterType="map" flushCache="true">
		delete from account_wallet_log where accountBuyId = #{accountBuyId};
		delete from sys_order where accountBuyId = #{accountBuyId};
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM account_user_buy
		<where>
				id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
</mapper>
