<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.temobi.complex.entity.CmUserCollect">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap type="CmUserCollect" id="sql_resultMap">
		<id property="id" column="id" />
		<result property="userId" column="userId" />
		<result property="authorId" column="authorId" />
		<result property="productId" column="productId" />
		<result property="topicId" column="topicId" />
		<result property="type" column="type" />
		<result property="creatWhen" column="creatWhen" />
		<result property="updateWhen" column="updateWhen" />
	</resultMap>
	
	<sql id="sql_selectAll">
		select * from cm_user_collect 
	</sql>
	
	<sql id="sql_where">
		<where>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)">and userId = #{userId} </if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(productId)">and productId = #{productId} </if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(authorId)">and authorId = #{authorId} </if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(topicId)">and topicId = #{topicId} </if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)">and type = #{type} </if>
		</where>
	</sql>
	
	<select id="count" resultType="Long" useCache="false">
		select count(*) from cm_user_collect
		<include refid="sql_where"></include>
	</select>
	
	<select id="getById" resultMap="sql_resultMap" useCache="false">
		<include refid="sql_selectAll"></include>
		where id=#{id}
	</select>
	
	<select id="findByPage" useCache="false"  resultMap="sql_resultMap">
		<include refid="sql_selectAll"></include>
		<include refid="sql_where"></include>
		order by id limit #{limit} offset #{offset}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resultMap" useCache="false">
		<include refid="sql_selectAll"/>
		<include refid="sql_where"/>
	</select>
	
	<select id="findAll" useCache="false"  resultMap="sql_resultMap">
		<include refid="sql_selectAll"></include>
		<include refid="sql_where"></include>
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into cm_user_collect(userId,authorId,productId,topicId,type,creatWhen,updateWhen) 
		 values(#{userId},#{authorId},#{productId},#{topicId},#{type},NOW(),#{updateWhen} )
	</insert>
	
	<update id="update" >
		update cm_user_collect
		<set>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)">userId=#{userId},</if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(productId)">productId=#{productId},</if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(authorId)">authorId=#{authorId},</if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)">type=#{type},</if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(topicId)">topicId=#{topicId},</if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(updateWhen)">updateWhen=#{updateWhen},</if>
		</set>
		where id=#{id}
	</update>
	
	<delete id="delete" flushCache="true">
		delete from cm_user_collect where id=#{id}
	</delete>
	
	<!-- 查询作品的相关信息   -->
	<select id="findProductDtoByPage" parameterType="map" resultType="cn.temobi.complex.dto.PmProductInfoDto" useCache="false">
		SELECT b.id as collectId,jumpType,jumpText,description,product_name as productName,create_type as createType,
		a.user_id as userId,is_public as isPublic,type_id as typeId,product_label as productLabel,
		create_from as createFrom,a.createdWhen,a.hot_score as hotScore,a.magic_score as magicScore,
		a.product_id as productId,thumbnail,url,search_count as searchCount,praise_count as praiseCount,
		a.discuss_count as discussCount 
		FROM cm_user_collect b
		LEFT JOIN pm_product_info a  ON  a.product_id = b.productId
		WHERE b.userId = #{userId} and b.type=#{type}
		ORDER BY b.id desc limit #{limit} offset #{offset}
	</select>
	
	<!-- 查询作者的相关信息   -->
	<select id="findAuthorDto" parameterType="map" resultType="cn.temobi.complex.dto.CmUserInfoListDto" useCache="false">
		SELECT a.id as collectId,c.career,b.birth,b.user_id as userId,nick_name as nickName,head_image_url as headImageUrl,city,
		fans_count as fansCount,product_count as productCount,discuss_count as discussCount 
		FROM cm_user_collect a 
		LEFT JOIN cm_user_info b ON a.authorId = b.user_id
		LEFT JOIN cm_user_extend_info c ON a.userId = c.user_id
		WHERE a.userId = #{userId} and a.type=#{type}
		ORDER BY a.id desc limit #{limit} offset #{offset}
	</select>
	
	<!-- 查询P图悬赏信息   -->
	<select id="findPmTopicJoinByPage" parameterType="map" resultType="cn.temobi.complex.entity.PmTopicJoinProducts" useCache="false">
		SELECT a.join_id as id ,a.description AS description,a.product_id AS productId,a.user_id as userId,c.nick_name AS nickName,c.head_image_url AS headImageUrl,b.url,b.thumbnail,b.discuss_count as discussCount,b.share_count as shareCount,
		b.stamp_count as stampCount,b.download_count as downloadCount,b.praise_count as praiseCount,b.search_count as  searchCount,cuc.id as collectId
		FROM cm_user_collect cuc  
        LEFT JOIN `pm_topic_join_products` a ON  cuc.topicId = a.join_id
		LEFT JOIN `pm_product_info` b ON a.`product_id`  = b.`product_id`
		LEFT JOIN `cm_user_info` c ON a.`user_id` = c.`user_id`
		LEFT JOIN pm_product_label d ON a.join_id = d.productId
        LEFT JOIN emoji_label e ON d.labelId = e.id
		WHERE cuc.userId = #{userId} and cuc.type=#{type}
		ORDER BY cuc.id desc limit #{limit} offset #{offset}
	</select>
	
	<delete id="cancelCollect" parameterType="map" flushCache="true">
		delete from cm_user_collect 
		<include refid="sql_where"></include>
	</delete>
	
	
</mapper>