<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.ThemeLove">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="ThemeLove">
			<id property="id" column="id" />
			<result property="themeId" column="themeId" />
			<result property="clientId" column="clientId" />
			<result property="createdWhen" column="created_when" />
	</resultMap>

	<sql id="sql_selectAll">
		select * from emoji_theme_love
	</sql>

	<sql id="sql_where">
		<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(themeId)">and themeId = #{themeId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(clientId)">and clientId = #{clientId}</if>
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="findByPage" parameterType="ThemeLove" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(*) FROM emoji_theme_love 
		<include refid="sql_where"/>
    </select>
    
	<insert id="insert" parameterType="ThemeLove" useGeneratedKeys="true" keyProperty="id">
	insert into emoji_theme_love(themeId,clientId,created_when)
	values(#{themeId},#{clientId},now())
	</insert>
	
	<update id="update" parameterType="ThemeLove">
	  UPDATE emoji_theme_love
        <set>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(themeId)"> themeId = #{themeId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(clientId)"> clientId = #{clientId},</if>
		 </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from emoji_theme_love where id = #{id}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM emoji_theme_love
		<where>
				id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
</mapper>
