<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.CmUserFans">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="CmUserFans">
			<id property="id" column="fans_id" />
			<result property="userId" column="user_id" />
			<result property="fansUserId" column="fans_user_id" />
			<result property="createdWhen" column="created_when" />
	</resultMap>

	<sql id="sql_selectAll">
		select * from cm_user_fans
	</sql>

	<sql id="sql_where">
		<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)">and user_id = #{userId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(fansUserId)">and fans_user_id = #{fansUserId}</if>
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where fans_id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="findByPage" parameterType="CmUserFans" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="findDto" parameterType="CmUserFans" resultType="cn.temobi.complex.dto.CmUserInfoListDto" useCache="false">
	SELECT c.career,b.birth,fans_user_id as userId,nick_name as nickName,head_image_url as headImageUrl,city,fans_count as fansCount,product_count as productCount,discuss_count as discussCount FROM cm_user_fans a LEFT JOIN `cm_user_info` b ON a.`fans_user_id` = b.`user_id`
	LEFT JOIN cm_user_extend_info c ON a.`fans_user_id` = c.`user_id`
	 WHERE a.`user_id` = #{userId}
	ORDER BY a.created_when desc limit #{limit} offset #{offset}
	</select>
	
	<!-- cm_user_fans 中fans_user_id用户 ，user_id 访客Id  下面查询的是 用户的访客信息   -->
	<select id="findFollowDto" parameterType="CmUserFans" resultType="cn.temobi.complex.dto.CmUserInfoListDto" useCache="false">
	SELECT c.career,date_format(a.created_when,'%Y-%c-%d %h:%i') AS visitTime,b.birth,b.user_id as userId,nick_name as nickName,head_image_url as headImageUrl,city,fans_count as fansCount,product_count as productCount,discuss_count as discussCount 
	FROM cm_user_fans a 
	LEFT JOIN `cm_user_info` b ON a.`fans_user_id` = b.`user_id`
	LEFT JOIN cm_user_extend_info c ON a.`fans_user_id` = c.`user_id`
	 WHERE a.`user_id` = #{fansUserId}
	ORDER BY a.created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(*) FROM cm_user_fans 
		<include refid="sql_where"/>
    </select>
    
	<insert id="insert" parameterType="CmUserFans" useGeneratedKeys="true" keyProperty="id">
	insert into cm_user_fans(user_id,fans_user_id,created_when)
	values(#{userId},#{fansUserId},now())
	</insert>
	
	<update id="update" parameterType="CmUserFans">
	  UPDATE cm_user_fans
        <set>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)"> user_id = #{userId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(fansUserId)"> fans_user_id = #{fansUserId},</if>
		  </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                fans_id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from cm_user_fans where fans_id = #{id}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM cm_user_fans
		<where>
				fans_id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
	
		<insert id="insertList" useGeneratedKeys="true" parameterType="list">  
      	insert into cm_user_fans(user_id,fans_user_id,created_when)
		values
        <foreach collection="list" item="item" index="index" separator="," >  
            (#{item.userId},#{item.fansUserId},now())
        </foreach>  
    </insert>  
</mapper>
