<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.Theme">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="Theme">
			<id property="id" column="id" />
			<result property="classifyId" column="classifyId" />
			<result property="userId" column="userId" />
			<result property="themeName" column="themeName" />
			<result property="themeUnlock" column="themeUnlock" />
			<result property="loveNum" column="loveNum" />
			<result property="thumbnailUrl" column="thumbnailUrl" />
			<result property="imageUrl" column="imageUrl" />
			<result property="status" column="status" />
			<result property="sort" column="sort" />
			<result property="h5Push" column="h5Push" />
			<result property="createdWhen" column="createdWhen" />
	</resultMap>

	<sql id="sql_selectAll">
		select * from emoji_theme
	</sql>

	<sql id="sql_where">
		<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(themeName)">and themeName like "%"#{themeName}"%"</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(classifyId)">and classifyId = #{classifyId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(status)">and status = #{status}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(h5Push)">and h5Push = #{h5Push}</if>
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY sort,`createdWhen` DESC  desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY sort desc,`createdWhen` DESC 
	</select>
	
	<select id="findByPage" parameterType="Theme" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY sort desc,`createdWhen` DESC  limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(*) FROM emoji_theme 
		<include refid="sql_where"/>
    </select>
    
    <select id="sumLove" resultType="long" useCache="false">
		SELECT IFNULL(sum(loveNum),0) FROM emoji_theme 
		<include refid="sql_where"/>
    </select>
	
	<insert id="insert" parameterType="Theme" useGeneratedKeys="true" keyProperty="id">
	insert into emoji_theme(themeName,classifyId,themeUnlock,loveNum,thumbnailUrl,imageUrl,status,sort,userId,h5Push,createdWhen)
	values(#{themeName},#{classifyId},#{themeUnlock},#{loveNum},#{thumbnailUrl},#{imageUrl},#{status},#{sort},#{userId},#{h5Push},now())
	</insert>
	
	<update id="update" parameterType="Theme">
	  UPDATE emoji_theme
        <set>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(themeName)"> themeName = #{themeName},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(classifyId)"> classifyId = #{classifyId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(themeUnlock)"> themeUnlock = #{themeUnlock},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(loveNum)"> loveNum = #{loveNum},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(thumbnailUrl)"> thumbnailUrl = #{thumbnailUrl},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(imageUrl)"> imageUrl = #{imageUrl},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)"> userId = #{userId},</if>
		 sort = #{sort},
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(status)"> status = #{status},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(h5Push)"> h5Push = #{h5Push},</if>
		 </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from emoji_theme where id = #{id}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM emoji_theme
		<where>
				id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
</mapper>
