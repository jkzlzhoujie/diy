<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.CmUserMessage">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="CmUserMessage">
			<id property="id" column="message_id" />
			<result property="userId" column="user_id" />
			<result property="type" column="type" />
			<result property="productId" column="product_id" />
			<result property="productUrl" column="product_url" />
			<result property="relId" column="rel_id" />
			<result property="content" column="content" />
			<result property="isRead" column="is_read" />
			<result property="readWhen" column="read_when" />
			<result property="sendUserId" column="send_user_id" />
			<result property="createdWhen" column="created_when" />
	</resultMap>

	<sql id="sql_selectAll">
		select * from cm_user_message
	</sql>

	<sql id="sql_where">
		<where>
		  <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)">and type = #{type}</if>
		  <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)">and user_id = #{userId}</if>
		  <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type1)">and type not in (1,4)</if>
		  <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(isRead)">and is_read = #{isRead}</if>
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where message_id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="findDtoByMap" parameterType="map" resultType="cn.temobi.complex.dto.CmUserMessageDto" useCache="false">
	SELECT a.send_user_id as sendUserId,message_id as messageId,product_url as productUrl,a.product_id as productId,content,a.created_when as createdWhen,a.`user_id` as userId,b.`nick_name` as nickName,b.head_image_url as headImageUrl,is_read as isRead,a.type 
	FROM `cm_user_message` a LEFT JOIN `cm_user_info` b ON a.send_user_id = b.`user_id`
	LEFT JOIN pm_product_info ppi ON a.product_id = ppi.product_id 
	<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)">and a.user_id = #{userId}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)">and type = #{type}
		        <if test="type==4">and ppi.is_public != 99 </if>
		 </if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type1)">and type not in (1,4)</if>
      </where>
	ORDER BY a.created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="findByPage" parameterType="CmUserMessage" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(*) FROM cm_user_message 
		<include refid="sql_where"/>
    </select>
    
	<insert id="insert" parameterType="CmUserMessage" useGeneratedKeys="true" keyProperty="id">
	insert into cm_user_message(user_id,product_url,type,product_id,rel_id,content,is_read,read_when,send_user_id,created_when)
	values(#{userId},#{productUrl},#{type},#{productId},#{relId},#{content},#{isRead},#{readWhen},#{sendUserId},now())
	</insert>
	
	<update id="update" parameterType="CmUserMessage">
	  UPDATE cm_user_message
        <set>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(userId)"> user_id = #{userId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(type)"> type = #{type},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(productId)"> product_id = #{productId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(relId)"> rel_id = #{relId},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(content)"> content = #{content},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(isRead)"> is_read = #{isRead},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(readWhen)"> read_when = #{readWhen},</if>
		 		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(productUrl)"> product_url = #{productUrl},</if>
		 		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(sendUserId)"> send_user_id = #{sendUserId},</if>
		 </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                message_id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from cm_user_message where message_id = #{id}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM cm_user_message
		<where>
				message_id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
	
	<insert id="insertList" useGeneratedKeys="true" parameterType="list">  
     	insert into cm_user_message(user_id,product_url,type,product_id,rel_id,content,is_read,read_when,send_user_id,created_when)
		values
       <foreach collection="list" item="item" index="index" separator="," >  
           (#{item.userId},#{item.productUrl},#{item.type},#{item.productId},#{item.relId},#{item.content},#{item.isRead},#{item.readWhen},#{item.sendUserId},now())
       </foreach>  
    </insert>  
</mapper>
