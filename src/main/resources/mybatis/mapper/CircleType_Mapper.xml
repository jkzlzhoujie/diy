<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.temobi.complex.entity.CircleType">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap type="CircleType" id="sql_resultMap">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="status" column="status" />
	</resultMap>
	
	<sql id="sql_selectAll">
		select * from circleType 
	</sql>
	
	<sql id="sql_where">
		<where>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(name)">and name like "%"#{name}"%"</if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(status)">and status = #{status}</if>
		</where>
	</sql>
	
	<select id="count" resultType="Long" useCache="false">
		select count(*) from circleType
		<include refid="sql_where"></include>
	</select>
	
	<select id="getById" resultMap="sql_resultMap" useCache="false">
		<include refid="sql_selectAll"></include>
		where id=#{id}
	</select>
	
	<select id="findByPage" useCache="false"  resultMap="sql_resultMap">
		<include refid="sql_selectAll"></include>
		<include refid="sql_where"></include>
		order by id limit #{limit} offset #{offset}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resultMap" useCache="false">
		<include refid="sql_selectAll"/>
		<include refid="sql_where"/>
	</select>
	
	<select id="findAll" useCache="false"  resultMap="sql_resultMap">
		<include refid="sql_selectAll"></include>
		<include refid="sql_where"></include>
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into circleType(name,status) 
		 values(#{name},#{status})
	</insert>
	
	<update id="update" >
		update circleType
		<set>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(name)">name=#{name},</if>
			<if test="@cn.temobi.core.util.StringUtil@isNotEmpty(status)">status = #{status},</if>
		</set>
		where id=#{id}
	</update>
	
	<delete id="delete" flushCache="true">
		delete from circleType where id=#{id}
	</delete>
	
</mapper>