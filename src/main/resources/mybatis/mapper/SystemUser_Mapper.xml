<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.temobi.complex.entity.SystemUser">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="sql_resuleMap" type="SystemUser">
			<id property="id" column="system_user_id" />
			<result property="username" column="system_user_name" />
			<result property="password" column="system_user_pwd" />
			<result property="rights" column="system_user_rights" />
			<result property="realName" column="system_user_real_name" />
			<result property="status" column="system_user_status" />
			<result property="createdWhen" column="created_when" />
	</resultMap>

	<sql id="sql_selectAll">
		select system_user_id,system_user_name,system_user_pwd,system_user_rights,
		system_user_real_name,system_user_status,created_when from emoji_system_user
	</sql>

	<sql id="sql_where">
		<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNumber(id)">and system_user_id = #{id}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(username)">and system_user_name = #{username}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(password)">and system_user_pwd = #{password}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(rights)">and system_user_rights = #{rights}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(realName)">and system_user_real_name = #{realName}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(status)">and system_user_status = #{status}</if>
        </where>
	</sql>
	
	<select id="findAll" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc
	</select>
	
	<select id="getById" parameterType="Long" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	 where system_user_id=#{id}
	</select>
	
	<select id="findByMap" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	</select>
	
	<select id="findUser" parameterType="map" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<where>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(username)">and system_user_name = #{username}</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(password)">and system_user_pwd = #{password}</if>
     </where>
	</select>
	
	<select id="findByPage" parameterType="SystemUser" resultMap="sql_resuleMap" useCache="false">
	<include refid="sql_selectAll"/>
	<include refid="sql_where"/>
	ORDER BY created_when desc limit #{limit} offset #{offset}
	</select>
	
	<select id="count" resultType="long" useCache="false">
		SELECT count(*) FROM emoji_system_user 
		<include refid="sql_where"/>
    </select>
    
	<insert id="insert" parameterType="SystemUser" useGeneratedKeys="true" keyProperty="id">
	insert into emoji_system_user(system_user_name,system_user_pwd,system_user_rights,
		system_user_real_name,system_user_status,created_when) 
	values(#{username},#{password},#{rights},#{realName},#{status},now())
	</insert>
	
	<update id="update" parameterType="SystemUser">
	  UPDATE emoji_system_user
        <set>
		  <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(username)"> system_user_name = #{username},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(password)"> system_user_pwd = #{password},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(rights)"> system_user_rights = #{rights},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(realName)"> system_user_real_name = #{realName},</if>
		 <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(status)"> system_user_status = #{status},</if>
		 </set>
        <where>
            <if test="@cn.temobi.core.util.StringUtil@isNotEmpty(id)">
                system_user_id=#{id}
            </if>
        </where>
	</update>
	
	<delete id="delete" parameterType="Long" flushCache="true">
		delete from emoji_system_user where system_user_id = #{id}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="list" flushCache="true">
		DELETE FROM emoji_system_user
		<where>
				id in
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					#{item}
        		</foreach>
		</where>
	</delete>
	
</mapper>
