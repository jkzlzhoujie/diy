<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-lazy-init="true">
    <description>Spring公共配置</description>
    <!-- 定义受环境影响易变的变量 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <!-- 数据库连接环境配置 -->
                <value>classpath*:/properties/jdbc.properties</value>
                <value>classpath*:/properties/mail.properties</value>
            </list>
        </property>
    </bean>
    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="cn.temobi"/>
    <context:annotation-config/>
    <!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- Connection Pooling Info -->
        <property name="maxPoolSize" value="${pool.c3p0.max_size}"/>
        <property name="minPoolSize" value="${pool.c3p0.min_size}"/>
        <property name="initialPoolSize" value="${pool.c3p0.initialPoolSize}"/>
        <property name="maxIdleTime" value="${pool.c3p0.maxIdleTime}"/>
        <property name="testConnectionOnCheckin" value="${pool.c3p0.testConnectionOnCheckin}"/>
        <property name="testConnectionOnCheckout" value="${pool.c3p0.testConnectionOnCheckout}"/>
        <property name="checkoutTimeout" value="${pool.c3p0.checkoutTimeout}"/>
        <!-- 每隔150秒检查连接池里的空闲连接 ，单位是秒-->
        <property name="idleConnectionTestPeriod" value="${pool.c3p0.idle_test_period}"/>
        <!--statemnets缓存大小-->
        <property name="maxStatements" value="${pool.c3p0.max_statements}"/>
        <property name="acquireIncrement" value="5"/>
        <!-- 获取连接失败后,重新尝试的次数  -->
        <property name="acquireRetryAttempts" value="${pool.c3p0.acquireRetryAttempts}"/>
        <property name="automaticTestTable" value="t_connect_table_test"/>
        <!-- 尝试连接间隔时间,毫秒 -->
        <property name="acquireRetryDelay" value="${pool.c3p0.acquireRetryDelay}"/>
    </bean>
    <!-- 事务管理器配置,单数据源事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:/mybatis/mapper/*Mapper.xml"/>
    </bean>

    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/ehcache.xml"/>
    </bean>
    
    <import resource="spring-xml/applicationContext-freeMarker.xml"/>
    
    <import resource="spring-xml/applicationContext-mail.xml"/>
    
    <import resource="spring-xml/spring-bean-defined.xml"/>
</beans>